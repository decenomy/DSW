name: Build and Extract Files from Docker Container

on:
  push:
    branches:
      - '*'

jobs:
  build-files-linux-x64:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build and Extract Files from Docker Container
        run: |
          # Extract the name of the repository and use it as the ticker value
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          # Build the Docker image from the Dockerfile in the repository
          docker buildx build \
            --no-cache \
            --build-arg CPU_CORES=$(nproc) \
            --build-arg TICKER=$REPO_NAME \
            --build-arg NAME=__Decenomy__ \
            --build-arg BASE_NAME=__decenomy__ \
            --build-arg TARGET=${{ github.ref }} \
            -t linux-x64-build-img \
            -f contrib/docker/Dockerfile.dsw-linux-x64-wallet .

          # Start the container (if it's not already running)
          docker run -d --name linux-x64-build-ctn linux-x64-build-img

          # Create a temporary directory to hold the extracted files
          mkdir release_files

          # Copy files from the Docker container to the local filesystem
          docker cp linux-x64-build-ctn:/$REPO_NAME/deploy/linux-x64 release_files/

      - name: Archive and Upload Extracted Files
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-linux-x64
          path: release_files
  build-files-linux-arm64:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build and Extract Files from Docker Container
        run: |
          # Extract the name of the repository and use it as the ticker value
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          # Build the Docker image from the Dockerfile in the repository
          docker buildx build \
            --no-cache \
            --build-arg CPU_CORES=$(nproc) \
            --build-arg TICKER=$REPO_NAME \
            --build-arg NAME=__Decenomy__ \
            --build-arg BASE_NAME=__decenomy__ \
            --build-arg TARGET=${{ github.ref }} \
            -t linux-arm64-build-img \
            -f contrib/docker/Dockerfile.dsw-linux-arm64-wallet .

          # Start the container (if it's not already running)
          docker run -d --name linux-arm64-build-ctn linux-arm64-build-img

          # Create a temporary directory to hold the extracted files
          mkdir release_files

          # Copy files from the Docker container to the local filesystem
          docker cp linux-arm64-build-ctn:/$REPO_NAME/deploy/linux-arm64 release_files/

      - name: Archive and Upload Extracted Files
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-linux-arm64
          path: release_files
  build-windows-x64:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build and Extract Files from Docker Container
        run: |
          # Extract the name of the repository and use it as the ticker value
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          # Build the Docker image from the Dockerfile in the repository
          docker buildx build \
            --no-cache \
            --build-arg CPU_CORES=$(nproc) \
            --build-arg TICKER=$REPO_NAME \
            --build-arg NAME=__Decenomy__ \
            --build-arg BASE_NAME=__decenomy__ \
            --build-arg TARGET=${{ github.ref }} \
            -t windows-x64-build-img \
            -f contrib/docker/Dockerfile.dsw-windows-x64-wallet .

          # Start the container (if it's not already running)
          docker run -d --name windows-x64-build-ctn windows-x64-build-img

          # Create a temporary directory to hold the extracted files
          mkdir release_files

          # Copy files from the Docker container to the local filesystem
          docker cp windows-x64-build-ctn:/$REPO_NAME/deploy/windows-x64 release_files/

      - name: Archive and Upload Extracted Files
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-windows-x64
          path: release_files
  build-macos-x64:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build and Extract Files from Docker Container
        run: |
          # Extract the name of the repository and use it as the ticker value
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          # Build the Docker image from the Dockerfile in the repository
          docker buildx build \
            --no-cache \
            --build-arg CPU_CORES=$(nproc) \
            --build-arg TICKER=$REPO_NAME \
            --build-arg NAME=__Decenomy__ \
            --build-arg BASE_NAME=__decenomy__ \
            --build-arg TARGET=${{ github.ref }} \
            -t macos-x64-build-img \
            -f contrib/docker/Dockerfile.dsw-macos-x64-wallet .

          # Start the container (if it's not already running)
          docker run -d --name macos-x64-build-ctn macos-x64-build-img

          # Create a temporary directory to hold the extracted files
          mkdir release_files

          # Copy files from the Docker container to the local filesystem
          docker cp macos-x64-build-ctn:/$REPO_NAME/deploy/macos-x64 release_files/

      - name: Archive and Upload Extracted Files
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-macos-x64
          path: release_files
