#FROM decenomy/dsw-windows-x64-builder:latest
FROM decenomy/dsw-windows-x64-builder@sha256:3bbdc2380c3e0c7409fe4dc54ad6f99d53fc1110d9f9a236d6e78a79e7067ccb

# ARG for specifying the number of cores
ARG CPU_CORES=1

# ARG for specifying the coin parameters
ARG TICKER=KYAN
ARG NAME=Kyanite
ARG BASE_NAME=kyanite
ARG TARGET=master

# Clone the repository
RUN git clone https://github.com/decenomy/$TICKER

# Switch to the repository directory
WORKDIR /$TICKER

# Check out a specific version if needed
RUN git pull
RUN git fetch --all
RUN git checkout $TARGET

RUN git log -1 --format="%at" | xargs -I{} date -d @{} "+%Y-%m-%d %H:%M:%S" > /git_timestamp
RUN git log -1 --format="%at" | xargs -I{} date -d @{} "+%Y%m%d%H%M.%S" > /git_timestamp_touch

# Run the configuration script
RUN PATH=${WRAP_DIR}:${PATH} ./autogen.sh && \
    PATH=${WRAP_DIR}:${PATH} ./configure \
        --prefix=/DSW/depends/x86_64-w64-mingw32 \
        --disable-debug \
        --disable-bench \
        --disable-tests \
        --disable-man \
        --enable-zmq \
        --with-gui \
        --enable-upnp-default \
        --enable-reduce-exports \
        --disable-gui-tests \
        CFLAGS="-O3" \
        CXXFLAGS="-O3"

# Compile the binaries
RUN PATH=${WRAP_DIR}:${PATH} make -j$CPU_CORES HOST=x86_64-w64-mingw32

# Extract the wallet version
RUN grep "define(_CLIENT_VERSION_MAJOR" configure.ac | awk -F"[ ,)]" '{print $3}' | tr -d '\n' > /wallet_version
RUN echo -n "." >> /wallet_version
RUN grep "define(_CLIENT_VERSION_MINOR" configure.ac | awk -F"[ ,)]" '{print $3}' | tr -d '\n' >> /wallet_version
RUN echo -n "." >> /wallet_version
RUN grep "define(_CLIENT_VERSION_REVISION" configure.ac | awk -F"[ ,)]" '{print $3}' | tr -d '\n' >> /wallet_version
RUN echo -n "." >> /wallet_version
RUN grep "define(_CLIENT_VERSION_BUILD" configure.ac | awk -F"[ ,)]" '{print $3}' | tr -d '\n' >> /wallet_version

# Create deploy files
RUN mkdir -p deploy/windows-x64
RUN PATH=${WRAP_DIR}:${PATH} x86_64-w64-mingw32-strip -s \
    src/$(echo $BASE_NAME)d.exe \
    src/$(echo $BASE_NAME)-cli.exe \
    src/$(echo $BASE_NAME)-tx.exe \
    src/qt/$(echo $BASE_NAME)-qt.exe
RUN cp \
    src/$(echo $BASE_NAME)d.exe \
    src/$(echo $BASE_NAME)-cli.exe \
    src/$(echo $BASE_NAME)-tx.exe \
    src/qt/$(echo $BASE_NAME)-qt.exe \
    /$TICKER/deploy/windows-x64
RUN find /$TICKER/deploy/windows-x64 -type f -exec touch -t $(cat /git_timestamp_touch) {} +

WORKDIR /$TICKER/deploy/windows-x64
RUN PATH=${WRAP_DIR}:${PATH} zip -X $TICKER-$(cat /wallet_version)-Windows-x64.zip \
    $(echo $BASE_NAME)d.exe \
    $(echo $BASE_NAME)-cli.exe \
    $(echo $BASE_NAME)-tx.exe \
    $(echo $BASE_NAME)-qt.exe

RUN echo "$(git rev-parse HEAD)                          commit" >> SHA256SUMS-Windows-x64.ASC
RUN sha256sum $(echo $BASE_NAME)d.exe >> SHA256SUMS-Windows-x64.ASC
RUN sha256sum $(echo $BASE_NAME)-cli.exe >> SHA256SUMS-Windows-x64.ASC
RUN sha256sum $(echo $BASE_NAME)-tx.exe >> SHA256SUMS-Windows-x64.ASC
RUN sha256sum $(echo $BASE_NAME)-qt.exe >> SHA256SUMS-Windows-x64.ASC
RUN sha256sum $TICKER-$(cat /wallet_version)-Windows-x64.zip >> SHA256SUMS-Windows-x64.ASC

# Set the Inno Setup compiler
RUN mkdir -p /$TICKER/contrib/innosetup/package
RUN cp $(echo $BASE_NAME)* /$TICKER/contrib/innosetup/package/
RUN find /$TICKER/contrib/innosetup/ -type f -exec touch -t $(cat /git_timestamp_touch) {} +
RUN find /$TICKER/contrib/innosetup/package/ -type f -exec touch -t $(cat /git_timestamp_touch) {} +

WORKDIR /$TICKER/contrib/innosetup

RUN PATH=${WRAP_DIR}:${PATH} wine ~/.wine/drive_c/Program\ Files\ \(x86\)/Inno\ Setup\ 6/ISCC.exe setup.iss
RUN mv output/$(echo $NAME)Setup.exe /$TICKER/deploy/windows-x64/$(echo $NAME)-$(cat /wallet_version)-Setup.exe

WORKDIR /$TICKER/deploy/windows-x64
RUN touch -t $(cat /git_timestamp_touch) $(echo $NAME)-$(cat /wallet_version)-Setup.exe
RUN PATH=${WRAP_DIR}:${PATH} zip -X $TICKER-$(cat /wallet_version)-WindowsSetup-x64.zip \
    $(echo $NAME)-$(cat /wallet_version)-Setup.exe

RUN sha256sum $(echo $NAME)-$(cat /wallet_version)-Setup.exe >> SHA256SUMS-Windows-x64.ASC
RUN sha256sum $TICKER-$(cat /wallet_version)-WindowsSetup-x64.zip >> SHA256SUMS-Windows-x64.ASC

# To compile and build the container execute docker in this way:
# docker build \
#   --build-arg CPU_CORES=<num_cores> \
#   --build-arg TICKER=> \
#   --build-arg NAME=<coin_name> \
#   --build-arg BASE_NAME=<base_name> \
#   --build-arg TARGET=<branch|commit|tag> \
#   -f Dockerfile.dsw-windows-x64-wallet .

# To run the container use:
# docker run -it <image_id>

# Set the entry point if you want to interact within the container
ENTRYPOINT ["bash"]
